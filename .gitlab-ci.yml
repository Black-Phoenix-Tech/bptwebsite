variables:
  DOCKER_FILE_PATH: ./Dockerfile

include:
  - file: .rule-template.yml
    project: zarebin-public/cicd-template
  - file: .scan-template.yml
    project: zarebin-public/cicd-template

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - develop # or the name of your main branch

build_panel_farm_client_dev:
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  only:
    refs:
      - develop
  script:
    - export IMAGE=docker.mci.dev/darkube/mci/app-farm-client-dev
    - darkube build --push --file $DOCKER_FILE_PATH --build-context . -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG --workdir . --build-arg WEATHER_URL=$WEATHER_URL_STAGE --build-arg AROUND_URL=$AROUND_URL_STAGE --build-arg FARM_CORE_URL=$BASE_BACKEND_URL --build-arg GOOGLE_ANALYTICS_API_ID=$GOOGLE_ANALYTICS_API_ID --build-arg SENTRY_DSN=$SENTRY_DSN --build-arg REPO_READONLY_USERNAME=$REPO_READONLY_USERNAME --build-arg REPO_READONLY_PASSWORD=$REPO_READONLY_PASSWORD --build-arg AUTH_TOKEN=$AUTH_TOKEN
  stage: build

all_deploy_dev:
  only:
    refs:
      - develop
  stage: deploy
  trigger:
    branch: main
    project: mse/agr/agr-ops
  variables:
    APP_NAME: app-farm-client
    CHART_YAML_PATH: values.yaml
    ENV: dev
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA

# build_panel_sport_client_stage:
#   extends:
#   - .staging_build
#   script:
#   - export IMAGE=docker.mci.dev/darkube/mci/panel-sport-client-dev
#   - darkube build --push --file $DOCKER_FILE_PATH --build-context . -t $IMAGE:$CI_COMMIT_TAG -t $IMAGE:$CI_COMMIT_REF_SLUG --workdir . --build-arg CICD_REPO_USER=$CICD_REPO_USER --build-arg CICD_REPO_PASS=$CICD_REPO_PASS --build-arg GOOGLE_ANALYTICS_API_ID=$DEV_GOOGLE_ANALYTICS_API_ID --build-arg SPORT_CORE_URL=$DEV_SPORT_CORE_URL --build-arg ZAREBIN_BASE_URL=$DEV_ZAREBIN_BASE_URL  --build-arg SENTRY_DSN=$DEV_SENTRY_DSN
#   stage: build

# all_deploy_stage:
#   extends: .staging_deploy
#   stage: deploy
#   trigger:
#     branch: main
#     project: mse/sport/sport-ops
#   variables:
#     APP_NAME: panel-sport-client
#     CHART_YAML_PATH: values.yaml
#     ENV: dev
#     IMAGE_TAG: $CI_COMMIT_TAG

build_panel_farm_client_prod:
  extends:
    - .staging_build
  script:
    - export IMAGE=docker.mci.dev/darkube/mci/app-farm-client-prod
    - darkube build --push -t $IMAGE:$CI_COMMIT_TAG -t $IMAGE:$CI_COMMIT_REF_SLUG --workdir . --file $DOCKER_FILE_PATH --build-context . --build-arg WEATHER_URL=$WEATHER_URL_PROD --build-arg AROUND_URL=$AROUND_URL_PROD --build-arg FARM_CORE_URL=$PROD_BACKEND_URL --build-arg GOOGLE_ANALYTICS_API_ID=$GOOGLE_ANALYTICS_API_ID --build-arg SENTRY_DSN=$SENTRY_DSN --build-arg REPO_READONLY_USERNAME=$REPO_READONLY_USERNAME --build-arg REPO_READONLY_PASSWORD=$REPO_READONLY_PASSWORD --build-arg AUTH_TOKEN=$AUTH_TOKEN
  stage: build

all_deploy_prod:
  extends: .staging_deploy
  stage: deploy
  trigger:
    branch: prod
    project: mse/agr/agr-ops
  variables:
    APP_NAME: app-farm-client
    CHART_YAML_PATH: values.yaml
    ENV: prod
    IMAGE_TAG: $CI_COMMIT_TAG

container_scan_dev:
  extends:
    - .container_scan
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'

  variables:
    IMAGE: docker.mci.dev/darkube/mci/app-farm-client-dev
  stage: scan
